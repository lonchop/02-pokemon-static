---
const links = [
  {
    label: "Pokemons list",
    href: "/",
    pattern: /^\/($|pokemons)/  // Coincide con "/" y "/pokemons/*"
  },
  {
    label: "Favorites",
    href: "/favorites",
    pattern: /^\/favorites/
  },
  {
    label: "Islands",
    href: "/islands",
    pattern: /^\/islands/
  }
]

const { pathname } = Astro.url;

// Función para determinar si un link está activo
const isActiveLink = (link: typeof links[0]) => {
  if (link.href === "/" && pathname === "/") {
    return true;
  }
  return link.pattern.test(pathname);
};
---

<nav class="bg-white dark:bg-slate-800">
  <div class="container flex items-center justify-center p-6 mx-auto text-gray-600 capitalize dark:text-gray-300">
    
    {links.map((link, index) => {
      const isActive = isActiveLink(link);
      return (
        <div class="relative">
          <a
            href={link.href}
            class:list={[
              "text-gray-800 dark:text-gray-200 mx-1.5 sm:mx-6 block pb-2",
              // {
              //   "text-blue-500": isActive
              // }
          ]}
          >
              {link.label}
          </a>
          {isActive && (
            <div
              transition:name="active"
              class="active"
            />
          )}
        </div>
      )
    })}
  </div>
</nav>

<style>
  @reference "tailwindcss";
  .active {
    @apply absolute bottom-0 left-0 right-0 h-0.5 bg-blue-500 mx-1.5 sm:mx-6;
  }
</style>